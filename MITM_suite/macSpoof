#!/usr/bin/python3
import sys
import subprocess ## Execute terminal commands
import optparse ##take arguments from user and use them
import re ## filter strings/ regular expressions
import time ##Allows to add sleep functionality

def macChanger(interface, mac):
	try:	
		print(f"[+] Changing MAC for interface {interface} to {mac}.....")
		time.sleep(3)
		subprocess.call(["sudo", "ifconfig", interface, "down"])
		subprocess.call(["sudo", "ifconfig", interface, "hw", "ether", mac])
		subprocess.call(["sudo", "ifconfig", interface, "up"])
	except KeyboardInterrupt:
		print("[-] Aborting!")
		time.sleep(1)
		print("[-] Exitting program!")
		sys.exit()
		

def get_arguments():
	parser = optparse.OptionParser() ##Parses options. Reads them and uses them
	parser.add_option("-i", "--interface", dest="interface", help="Interface to change MAC of") ## Adds a help msg for user regarding an option
	parser.add_option("-m", "--mac", dest="mac", help="New address to change to") ## Adds a help msg for user regarding an option
	(options, arguments) = parser.parse_args()## Allows object to understand what user has entered and handel it. return returns the output of the command.
	if not options.interface:
		parser.error("[-] Run-time error. Interface not specified. Interface is required. Use --help for more info.")
	elif not options.mac:
		parser.error("[-] Run-time error. New MAC not specified. MAC is required. Use --help for more info.")
	elif options.interface == "lo":
		parser.error("[-] interface 'lo' does not have a MAC address. Please use interfaces like 'eth0' or 'wlan0'." )
	return options	

	
options = get_arguments() ##(options, arguments) helps capture user input.


result_ifconfig = subprocess.check_output(["sudo", "ifconfig", options.interface])
result= str(result_ifconfig)
mac_search_result = re.search(r'\w\w:\w\w:\w\w:\w\w:\w\w:\w\w', result)
print(f"Old MAC is: {mac_search_result.group(0)}")

macChanger(options.interface, options.mac) ## options.interface: Sets interface to the one provided by user. options.mac: Sets mac to the one provided by user.

result_ifconfig = subprocess.check_output(["sudo", "ifconfig", options.interface])
result= str(result_ifconfig)
mac_search_result = re.search(r'\w\w:\w\w:\w\w:\w\w:\w\w:\w\w', result)
if mac_search_result:
	print(f"[+] New MAC as per 'ifconfig {options.interface}' is >> " + mac_search_result.group(0))
else:
	print(f"[-] Could not read MAC address from 'ifconfig {options.inteface}")
	
subprocess.call(["sudo", "ifconfig", options.interface])
if mac_search_result.group(0) == options.mac:
	print("[+] Successfuly changed your MAC address.")
else:
	print("[-] Error: Could not change MAC address. Did you enter a valid MAC?")
if  KeyboardInterrupt:
	print('\nExitting program.')
	sys.exit()
print('\n')
print("Thank you for using macSpoof.")
print("		Remember, Spoof your way in! Happy hacking!")
